# importing required libraries
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import pandas as pd

# read the train and test dataset
train_data = pd.read_csv('train-data.csv')
test_data = pd.read_csv('test-data.csv')

# separate the independent and target variable on training data
train_x = train_data.drop(columns=['Survived'],axis=1)
train_y = train_data['Survived']

# separate the independent and target variable on testing data
test_x = test_data.drop(columns=['Survived'],axis=1)
test_y = test_data['Survived']

#Create the object of the Logistic Regressionmodel
model = LogisticRegression()

# fit the model with the training data
model.fit(train_x,train_y)

# coefficients of the trainedmodel
print('Coefficient ofmodel :',model.coef_)

# intercept of the model
print('Intercept ofmodel',model.intercept_)

# predict the target on the train dataset
predict_train =model.predict(train_x)
print('Target on train data',predict_train)

# Accuray Score on train dataset
accuracy_train = accuracy_score(train_y,predict_train)
print('accuracy_score on train dataset: ', accuracy_train)

# predict the target on the test dataset
predict_test =model.predict(test_x)
print('Target on test data',predict_test)

# Accuracy Score on test dataset
accuracy_test = accuracy_score(test_y,predict_test)
print('accuracy_score on test dataset: ', accuracy_test)